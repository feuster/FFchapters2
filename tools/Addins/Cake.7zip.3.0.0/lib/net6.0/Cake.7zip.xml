<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.7zip</name>
    </assembly>
    <members>
        <member name="T:Cake.SevenZip.Arguments.IHaveArgument">
            <summary>
            Base for all arguments.
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Arguments.IHaveArgumentArchive">
            <summary>
            Interface for all commands supporting the Archive-Argument.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Arguments.IHaveArgumentArchive.Archive">
            <summary>
            Sets the archive the command operates on.
            </summary>
            <value>
            The archive.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Arguments.IHaveArgumentDirectories">
            <summary>
            Interface for all commands supporting multiple directories as arguments.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.Directories">
            <summary>
            Gets or sets the list of Directories the command operates on.
            <para>
            For add and update, adding a directory will add the directory itself to the root of the archive
            including everything in it.
            </para>
            <seealso cref="P:Cake.SevenZip.Arguments.IHaveArgumentFiles.Files"/>
            <seealso cref="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.DirectoryContents"/>
            <seealso cref="T:Cake.SevenZip.Switches.SwitchIncludeFilename"/>
            <seealso cref="T:Cake.SevenZip.Switches.SwitchExcludeFilename"/>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.DirectoryContents">
            <summary>
            Gets or sets the list of Directory-contents the command operates on.
            <para>
            For add and update, adding a directory this way will add the files of the directory
            to the root of the archive but not the directory itself.
            </para>
            <seealso cref="P:Cake.SevenZip.Arguments.IHaveArgumentFiles.Files"/>
            <seealso cref="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.Directories"/>
            <seealso cref="T:Cake.SevenZip.Switches.SwitchIncludeFilename"/>
            <seealso cref="T:Cake.SevenZip.Switches.SwitchExcludeFilename"/>
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Arguments.IHaveArgumentFiles">
            <summary>
            Interface for all commands supporting multiple files as arguments.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Arguments.IHaveArgumentFiles.Files">
            <summary>
            Gets or sets the list of files this command operates on.
            These are single files. (I.e. to add to, or to remove from the archive).
            <para>
            For add and update, single files from the file-system will always be
            placed directly into the archive without any directory-structure.
            </para>
            Setting Files like this in add/update:
            <code>
            Files = new[] {
              new FilePath("C:\\some\\place\\a.txt"),
              new FilePath("C:\\some\\other\\place\\b.txt"),
              new FilePath("C:\\a\\totally\\different\\place\\c.txt")
            };
            </code>
            Will result in an archive:
            <code>
            Archive.zip
            - a.txt
            - b.txt
            - c.txt
            </code>
            without any directory structure.
            <seealso cref="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.Directories"/>
            <seealso cref="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.DirectoryContents"/>
            </summary>
            <value>
            The archive.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Arguments.RenamePair">
            <summary>
            A pair or old- and new name for the <see cref="T:Cake.SevenZip.Commands.RenameCommand"/>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Arguments.RenamePair.OldFile">
            <summary>
            Gets or sets the old name. (i.e. The file to be renamed.)
            </summary>
            <value>
            The old name.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Arguments.RenamePair.NewFile">
            <summary>
            Gets or sets the new name.
            </summary>
            <value>
            The new name.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Arguments.NamespaceDoc">
            <summary>
            This namespace contain types related to running 7zip.
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Builder.AddCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.AddCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("ZipIt")
                .Does(() =>
            {
                SevenZip(m => m
                    .InAddMode()
                    .WithArchive(File("path/to/file.zip"))
                    .WithFiles(File("a.txt"))
                    .WithFiles(File("b.txt"))
                    .WithVolume(1, VolumeUnit.Gigabytes));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.AddCommandBuilder.#ctor(Cake.SevenZip.Commands.AddCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.AddCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentArchive}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentFiles}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentDirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchVolume}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchArchiveType}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressionMethod}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchPassword}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtSecurityInformation}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtfsAlternateStreams}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressFilesOpenForWriting}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchTimestampFromMostRecentFile}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchWorkingDirectory}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchUpdateOptions}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchDeleteAfterCompression}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchSelfExtractingArchive}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.AddCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchFullyQualifiedFilePaths}#Command">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Builder.ArgumentArchiveBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentArchive"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportArgumentBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.ArgumentArchiveBuilder.WithArchive``1(``0,Cake.Core.IO.FilePath)">
            <summary>
            fluent setter for <see cref="P:Cake.SevenZip.Arguments.IHaveArgumentArchive.Archive"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentArchive"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="archive">The archive to operate on.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.ArgumentDirectoriesBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentDirectories"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportArgumentBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.ArgumentDirectoriesBuilder.WithDirectories``1(``0,Cake.Core.IO.DirectoryPath[])">
            <summary>
            fluent setter for <see cref="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.Directories"/>.
            <para>
            See the comments on <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Files"/>,
            <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Directories"/> and <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.DirectoryContents"/>
            regarding files and directory structures.
            </para>
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentDirectories"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="directories">The directories to operate on.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.ArgumentDirectoriesBuilder.WithDirectories``1(``0,Cake.Core.IO.DirectoryPathCollection)">
            <summary>
            See <see cref="M:Cake.SevenZip.Builder.ArgumentDirectoriesBuilder.WithDirectories``1(``0,Cake.Core.IO.DirectoryPath[])"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentDirectories"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="directories">The directories to operate on.</param>
            <returns>The builder, for fluent use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.ArgumentDirectoriesBuilder.WithDirectoryContents``1(``0,Cake.Core.IO.DirectoryPath[])">
            <summary>
            fluent setter for <see cref="P:Cake.SevenZip.Arguments.IHaveArgumentDirectories.DirectoryContents"/>.
            <para>
            See the comments on <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Files"/>,
            <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Directories"/> and <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.DirectoryContents"/>
            regarding files and directory structures.
            </para>
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentDirectories"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="directories">The directories to operate on.</param>
            <returns>The builder, for fluent use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.ArgumentDirectoriesBuilder.WithDirectoryContents``1(``0,Cake.Core.IO.DirectoryPathCollection)">
            <summary>
            See <see cref="M:Cake.SevenZip.Builder.ArgumentDirectoriesBuilder.WithDirectoryContents``1(``0,Cake.Core.IO.DirectoryPath[])"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentDirectories"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="directories">The directories to operate on.</param>
            <returns>The builder, for fluent use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.ArgumentFilesBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentFiles"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportArgumentBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.ArgumentFilesBuilder.WithFiles``1(``0,Cake.Core.IO.FilePath[])">
            <summary>
            fluent setter for <see cref="P:Cake.SevenZip.Arguments.IHaveArgumentFiles.Files"/>.
            <para>
            See the comments on <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Files"/>,
            <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Directories"/> and <see cref="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.DirectoryContents"/>
            regarding files and directory structures.
            </para>
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentFiles"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="files">The files to operate on.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.ArgumentFilesBuilder.WithFiles``1(``0,Cake.Core.IO.FilePathCollection)">
            <summary>
            See <see cref="M:Cake.SevenZip.Builder.ArgumentFilesBuilder.WithFiles``1(``0,Cake.Core.IO.FilePath[])"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Arguments.IHaveArgumentFiles"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="files">The files to operate on.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.BaseOutputBuilder`2">
            <summary>
            Base for builders that support <see cref="T:Cake.SevenZip.Commands.BaseOutputCommand`1"/>.
            </summary>
            <typeparam name="TBuilder">the command-builder that extends this base-class. Only needed for "nice" fluid-tying.</typeparam>
            <typeparam name="TOutput">the output of the <see cref="T:Cake.SevenZip.Commands.BaseOutputCommand`1"/> supported by this builder.</typeparam>
        </member>
        <member name="P:Cake.SevenZip.Builder.BaseOutputBuilder`2.OutputCommand">
            <summary>
            Gets the output command.
            </summary>
            <value>
            The output command.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Builder.BaseOutputBuilder`2.WithCommandOutput(System.Action{`1})">
            <summary>
            fluent action to set the output-action of <see cref="T:Cake.SevenZip.Commands.BaseOutputCommand`1"/>.
            </summary>
            <param name="outputAction">the action to perform on the output.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.BaseOutputBuilder`2.WithCommandRawOutput(System.Action{System.String[]})">
            <summary>
            fluent action to set the raw-output of <see cref="T:Cake.SevenZip.Commands.BaseOutputCommand`1"/>.
            </summary>
            <param name="rawOutputAction">the action to perform on the output.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.BenchmarkCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.BenchmarkCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("DoBenchmark")
                .Does(() =>
            {
                SevenZip(m => m
                    .InBenchmarkMode()
                    .WithMethod("*")
                    .WithNumberOfIterations(2)
                    .WithCommandOutput(o =>
                    {
                        Information("7Zip version is:" + o.Information);
                        Information("Benchmark results:");
                        Information(o.Benchmark);
                    }));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.BenchmarkCommandBuilder.#ctor(Cake.SevenZip.Commands.BenchmarkCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.BenchmarkCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.BenchmarkCommandBuilder.OutputCommand">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Builder.BenchmarkCommandBuilder.WithNumberOfIterations(System.Int32)">
            <summary>
            Sets the number of iterations.
            </summary>
            <param name="numberOfIterations">The number of iterations.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.BenchmarkCommandBuilder.WithDictionarySize(System.Int32)">
            <summary>
            Sets the size of the dictionary.
            </summary>
            <param name="dictionarySize">Size of the dictionary.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.BenchmarkCommandBuilder.WithNumberOfThreads(System.Int32)">
            <summary>
            Sets the number of threads.
            </summary>
            <param name="numberOfThreads">The number of threads.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.BenchmarkCommandBuilder.WithMethod(System.String)">
            <summary>
            Sets the method.
            </summary>
            <param name="method">The method.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.CommandBuilder">
            <summary>
            Builder for all <see cref="T:Cake.SevenZip.Commands.ICommand"/>s.
            Do NOT call In...Mode() multiple times.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Builder.CommandBuilder.Command">
            <summary>
            Gets the Command.
            </summary>
            <value>
            The Command.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InAddMode">
            <summary>
            Makes this Builder an AddCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.AddCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InExtractMode">
            <summary>
            Makes this Builder an ExtractCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.ExtractCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InDeleteMode">
            <summary>
            Makes this Builder a DeleteCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.DeleteCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InUpdateMode">
            <summary>
            Makes this Builder an UpdateCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.UpdateCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InInformationMode">
            <summary>
            Makes this Builder an InformationCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.InformationCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InTestMode">
            <summary>
            Makes this Builder a TestCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.TestCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InHashMode">
            <summary>
            Makes this Builder a HashCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.HashCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InBenchmarkMode">
            <summary>
            Makes this Builder a BenchmarkCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.BenchmarkCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InListMode">
            <summary>
            Makes this Builder a ListCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.ListCommandBuilder"/>.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.CommandBuilder.InRenameMode">
            <summary>
            Makes this Builder a RenameCommand-Builder.
            </summary>
            <returns><see cref="T:Cake.SevenZip.Builder.RenameCommandBuilder"/>.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.DeleteCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.DeleteCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("RemoveFiles")
                .Does(() =>
            {
                SevenZip(m => m
                  .InDeleteMode()
                  .WithArchive(File("path/to/file.zip"))
                  .WithFiles("*.pdf", "*.xps")
                  .WithPassword("secure!"));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.DeleteCommandBuilder.#ctor(Cake.SevenZip.Commands.DeleteCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.DeleteCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentArchive}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentFiles}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentDirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressionMethod}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchPassword}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtfsAlternateStreams}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchWorkingDirectory}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchUpdateOptions}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchSelfExtractingArchive}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.DeleteCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchFullyQualifiedFilePaths}#Command">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Builder.ExtractCommandBuilder">
             <summary>
             Builder for <see cref="T:Cake.SevenZip.Commands.ExtractCommand"/>.
             <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
             </summary>
             <example>
             <code>
             <![CDATA[
             Task("UnzipIt")
                 .Does(() =>
             {
                 SevenZip(m => m
                   .InExtractMode()
                   .WithArchive(File("path/to/file.zip"))
                   .WithArchiveType(SwitchArchiveType.Zip)
                   .WithOutputDirectory("some/other/directory"));
             });
            
             Task("UnzipVolumes")
                 .Does(() =>
             {
                 SevenZip(m => m
                   .InExtractMode()
                   .WithArchive(File("path/to/file.7z.001"))
                   .WithArchiveType(SwitchArchiveType.SevenZip.Volumes())
                   .WithOutputDirectory("some/other/directory"));
             });
             ]]>
             </code>
             </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.ExtractCommandBuilder.#ctor(Cake.SevenZip.Commands.ExtractCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.ExtractCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentArchive}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchArchiveType}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressionMethod}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchPassword}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtSecurityInformation}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtfsAlternateStreams}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeArchiveFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeArchiveFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchDisableParsingOfArchiveName}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchOverwriteMode}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchOutputDirectory}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.ExtractCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchFullyQualifiedFilePaths}#Command">
            <inheritdoc />
        </member>
        <member name="M:Cake.SevenZip.Builder.ExtractCommandBuilder.WithFullPathExtraction">
            <summary>
            Sets UseFullPaths to true on the <see cref="T:Cake.SevenZip.Commands.ExtractCommand"/>.
            </summary>
            <returns>The builder, for fluent use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.ExtractCommandBuilder.WithoutFullPathExtraction">
            <summary>
            Sets UseFullPaths to false on the <see cref="T:Cake.SevenZip.Commands.ExtractCommand"/>.
            (copies all extracted files to one directory).
            </summary>
            <returns>The builder, for fluent use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.HashCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.HashCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("GetHash")
                .Does(() =>
            {
                SevenZip(m => m
                    .InHashMode()
                    .WithFiles(File("foo.txt"))
                    .WithHashFunction(SwitchSetHashFunction.Sha1)
                    .WithCommandOutput(o =>
                    {
                        Information("7Zip version is:" + o.Information);
                        var file = o.Files.Single(); // only one file was given above
                        var hash = file.Hashes.Single(); // only one hash-function was given above
                        Information($"{hash.HashFunction} of {file.FilePath} is: {hash.Hash}");
                    }));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.HashCommandBuilder.#ctor(Cake.SevenZip.Commands.HashCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.HashCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentFiles}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentDirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressFilesOpenForWriting}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressionMethod}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtfsAlternateStreams}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchSetHashFunction}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.HashCommandBuilder.OutputCommand">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Builder.InformationCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.InformationCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("GetInfos")
                .Does(() =>
            {
                SevenZip(m => m
                    .InInformationMode()
                    .WithCommandOutput(o =>
                    {
                        Information("7Zip version is:" + o.Information);
                        Information("7Zip supports QCOW:" + (o.Formats.Any(x => x.IndexOf("QCOW") > -1)));
                    }));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.InformationCommandBuilder.#ctor(Cake.SevenZip.Commands.InformationCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.InformationCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.InformationCommandBuilder.OutputCommand">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Builder.ISupportArgumentBuilder`1">
            <summary>
            Base for builders that support arguments.
            </summary>
            <typeparam name="T">the <see cref="T:Cake.SevenZip.Arguments.IHaveArgument"/> supported by this builder.</typeparam>
        </member>
        <member name="P:Cake.SevenZip.Builder.ISupportArgumentBuilder`1.Command">
            <summary>
            Gets the command that supports the given argument.
            </summary>
            <value>
            The argument.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1">
            <summary>
            Base for builders that support switches.
            </summary>
            <typeparam name="T">the <see cref="T:Cake.SevenZip.Switches.ISupportSwitch"/> supported by this builder.</typeparam>
        </member>
        <member name="P:Cake.SevenZip.Builder.ISupportSwitchBuilder`1.Command">
            <summary>
            Gets the command that supports the given switch.
            </summary>
            <value>
            The switch.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Builder.ListCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.ListCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("ListArchiveContent")
                .Does(() =>
            {
                SevenZip(m => m
                    .InListMode()
                    .WithArchive(File("path/to/file.zip"))
                    .WithCommandOutput(o =>
                    {
                        Information("7Zip version is:" + o.Information);
                        var archive = o.Archives.Single(); // only one archive given above
                        foreach(var file in archive.Files)
                        {
                            Information($"{file.Name} has compressed size {file.CompressedSize} (of {file.Size})");
                        }
                    });
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.ListCommandBuilder.#ctor(Cake.SevenZip.Commands.ListCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.ListCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentArchive}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeArchiveFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchDisableParsingOfArchiveName}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeArchiveFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtfsAlternateStreams}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchPassword}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchArchiveType}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchShowTechnicalInformation}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.ListCommandBuilder.OutputCommand">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Builder.RenameCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.RenameCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("RenameArchiveContent")
                .Does(() =>
            {
                SevenZip(m => m
                    .InRenameMode()
                    .WithArchive(File("path/to/file.zip"))
                    .WithRenameFile(File("old.txt"), File("new.txt")));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.RenameCommandBuilder.#ctor(Cake.SevenZip.Commands.RenameCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.RenameCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentArchive}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchPassword}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchTimestampFromMostRecentFile}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchUpdateOptions}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchWorkingDirectory}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.RenameCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressionMethod}#Command">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Builder.RenameCommandBuilder.WithRenameFile(Cake.Core.IO.FilePath,Cake.Core.IO.FilePath)">
            <summary>
            fluent setter for <see cref="P:Cake.SevenZip.Commands.RenameCommand.RenamePairs"/>.
            </summary>
            <param name="oldFile">The old file to rename.</param>
            <param name="newFile">The new filename.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchArchiveTypeBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchArchiveType"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchArchiveTypeBuilder.WithArchiveType``1(``0,Cake.SevenZip.Switches.SwitchArchiveType)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchArchiveType"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchArchiveType"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="type">The type to set.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchCompressFilesOpenForWritingBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressFilesOpenForWriting"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchCompressFilesOpenForWritingBuilder.WithCompressFilesOpenForWriting``1(``0)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressFilesOpenForWriting"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressFilesOpenForWriting"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchCompressionMethodBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchCompressionMethodBuilder.WithCompressionMethod``1(``0,System.Action{Cake.SevenZip.Switches.SwitchCompressionMethod})">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/> using an action.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/>.</typeparam>
            <param name="this">The this.</param>
            <param name="action">The action.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchCompressionMethodBuilder.WithCompressionMethodMethod``1(``0,System.String)">
            <summary>
            fluent setter for the method of <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/>.</typeparam>
            <param name="this">The this.</param>
            <param name="method">The method.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchCompressionMethodBuilder.WithCompressionMethodLevel``1(``0,System.Int32)">
            <summary>
            fluent setter for the method of <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/>.</typeparam>
            <param name="this">The this.</param>
            <param name="level">The level to set.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchDeleteAfterCompressionBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchDeleteAfterCompression"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchDeleteAfterCompressionBuilder.WithDeleteAfterCompression``1(``0)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchDeleteAfterCompression"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchDeleteAfterCompression"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchDisableParsingOfArchiveNameBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchDisableParsingOfArchiveName"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchDisableParsingOfArchiveNameBuilder.WithDisableParsingOfArchiveName``1(``0)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchDisableParsingOfArchiveName"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchDisableParsingOfArchiveName"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchExcludeArchiveFilenamesBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchExcludeArchiveFilenamesBuilder.WithExcludeArchiveFilenames``1(``0,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchExcludeArchiveFilenamesBuilder.WithExcludeArchiveFilenames``1(``0,Cake.SevenZip.Switches.RecurseType,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="type">The <see cref="T:Cake.SevenZip.Switches.RecurseType"/>.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchExcludeFilenamesBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchExcludeFilenamesBuilder.WithExcludeFilenames``1(``0,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchExcludeFilenamesBuilder.WithExcludeFilenames``1(``0,Cake.SevenZip.Switches.RecurseType,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="type">The <see cref="T:Cake.SevenZip.Switches.RecurseType"/>.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchFullyQualifiedFilePathsBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchFullyQualifiedFilePaths"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchFullyQualifiedFilePathsBuilder.WithFullyQualifiedFilePaths``1(``0,System.Boolean)">
            <summary>
            fluent setter for <see cref="P:Cake.SevenZip.Switches.ISupportSwitchFullyQualifiedFilePaths.FullyQualifiedFilePaths"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchFullyQualifiedFilePaths"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="includeDriveLetters">Whether to include drive-letters or not.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchIncludeArchiveFilenamesBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeArchiveFilenames"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchIncludeArchiveFilenamesBuilder.WithIncludeArchiveFilenames``1(``0,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeArchiveFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeArchiveFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchIncludeArchiveFilenamesBuilder.WithIncludeArchiveFilenames``1(``0,Cake.SevenZip.Switches.RecurseType,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeArchiveFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeArchiveFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="type">The <see cref="T:Cake.SevenZip.Switches.RecurseType"/>.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchIncludeFilenamesBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchIncludeFilenamesBuilder.WithIncludeFilenames``1(``0,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchIncludeFilenamesBuilder.WithIncludeFilenames``1(``0,Cake.SevenZip.Switches.RecurseType,System.String,System.String[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="type">The <see cref="T:Cake.SevenZip.Switches.RecurseType"/>.</param>
            <param name="fileNameWildcard">The filename-wildcard.</param>
            <param name="additional">Additional filename-wildcards.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchNtfsAlternateStreamsBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtfsAlternateStreams"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchNtfsAlternateStreamsBuilder.WithNtfsAlternateStreams``1(``0)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtfsAlternateStreams"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtfsAlternateStreams"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchNtSecurityInformationBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtSecurityInformation"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchNtSecurityInformationBuilder.WithNtSecurityInformation``1(``0)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtSecurityInformation"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtSecurityInformation"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchOutputDirectoryBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchOutputDirectory"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchOutputDirectoryBuilder.WithOutputDirectory``1(``0,Cake.Core.IO.DirectoryPath)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchOutputDirectory"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchOutputDirectory"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="directory">The directory to output to.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchOverwriteModeBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchOverwriteMode"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchOverwriteModeBuilder.WithOverwriteMode``1(``0,Cake.SevenZip.Switches.OverwriteMode)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchOverwriteMode"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchOverwriteMode"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="mode">The <see cref="T:Cake.SevenZip.Switches.OverwriteMode"/> to set.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchPasswordBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchPassword"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchPasswordBuilder.WithPassword``1(``0,System.String)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchPassword"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchPassword"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="password">The password.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchRecurseSubdirectoriesBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchRecurseSubdirectories"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchRecurseSubdirectoriesBuilder.WithRecurseSubdirectories``1(``0,Cake.SevenZip.Switches.RecurseType)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchRecurseSubdirectories"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchRecurseSubdirectories"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="type">The Recurse-type.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchSelfExtractingArchiveBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchSelfExtractingArchive"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchSelfExtractingArchiveBuilder.WithSelfExtractingArchive``1(``0,Cake.Core.IO.FilePath)">
            <summary>
            fluent setter for <see cref="P:Cake.SevenZip.Switches.ISupportSwitchSelfExtractingArchive.SelfExtractingArchive"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchOverwriteMode"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="module">The sfx-module to set. If omitted, the default is used.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchSetHashFunctionBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchSetHashFunction"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchSetHashFunctionBuilder.WithHashFunction``1(``0,Cake.SevenZip.Switches.SwitchSetHashFunction,Cake.SevenZip.Switches.SwitchSetHashFunction[])">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchSetHashFunction"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchSetHashFunction"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="hashFunction">The hash-function.</param>
            <param name="additionalHashFunctions">Any additional hash-functions.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchSetTimestampFromMostRecentFileBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchTimestampFromMostRecentFile"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchSetTimestampFromMostRecentFileBuilder.WithSetTimestampFromMostRecentFile``1(``0)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchTimestampFromMostRecentFile"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchTimestampFromMostRecentFile"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchShowTechnicalInformationBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchShowTechnicalInformation"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchShowTechnicalInformationBuilder.WithShowTechnicalInformation``1(``0)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchShowTechnicalInformation"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchShowTechnicalInformation"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchUpdateOptionsBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchUpdateOptions"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchUpdateOptionsBuilder.WithUpdateOptions``1(``0,System.Action{Cake.SevenZip.Switches.SwitchUpdateOptions})">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchUpdateOptions"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchUpdateOptions"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="action">Actions to perform on the <see cref="T:Cake.SevenZip.Switches.SwitchUpdateOptions"/>.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchVolumeBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchVolume"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchVolumeBuilder.WithVolume``1(``0,System.Int32,Cake.SevenZip.Switches.VolumeUnit)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchVolume"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchVolume"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="size">The size.</param>
            <param name="unit">The unit.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.SwitchWorkingDirectoryBuilder">
            <summary>
            Extensions for all Builders that support <see cref="T:Cake.SevenZip.Switches.ISupportSwitchWorkingDirectory"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1"/>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Builder.SwitchWorkingDirectoryBuilder.WithWorkingDirectory``1(``0,Cake.Core.IO.DirectoryPath)">
            <summary>
            fluent setter for <see cref="T:Cake.SevenZip.Switches.ISupportSwitchWorkingDirectory"/>.
            </summary>
            <typeparam name="T">the builder to support the <see cref="T:Cake.SevenZip.Switches.ISupportSwitchWorkingDirectory"/>.</typeparam>
            <param name="this">The builder-instance.</param>
            <param name="path">The directory.</param>
            <returns>The builder-instance for fluent re-use.</returns>
        </member>
        <member name="T:Cake.SevenZip.Builder.TestCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.TestCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("TestZip")
                .Does(() =>
            {
                SevenZip(m => m
                   .InTestMode()
                   .WithArchive(File("path/to/file.zip"))
                   .WithCommandOutput(o =>
                   {
                       Information("7Zip version is:" + o.Information);
                       foreach (var archiveTestResult in o.Archives)
                       {
                           var isOk = archiveTestResult.IsOk ? "OK" : "not OK";
                           Information($" - {archiveTestResult.FileName} test is { isOk }");
                       }
                   }));
             });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.TestCommandBuilder.#ctor(Cake.SevenZip.Commands.TestCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.TestCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentArchive}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentFiles}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeArchiveFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeArchiveFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchDisableParsingOfArchiveName}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchPassword}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtfsAlternateStreams}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.TestCommandBuilder.OutputCommand">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Builder.UpdateCommandBuilder">
            <summary>
            Builder for <see cref="T:Cake.SevenZip.Commands.UpdateCommand"/>.
            <seealso cref="T:Cake.SevenZip.Builder.ISupportSwitchBuilder`1" />
            </summary>
            <example>
            <code>
            <![CDATA[
            Task("UpdateIt")
                .Does(() =>
            {
                SevenZip(m => m
                    .InUpdateMode()
                    .WithArchive(File("path/to/file.zip"))
                    .WithFiles(File("a.txt"))
                    .WithFiles(File("b.txt")));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.Builder.UpdateCommandBuilder.#ctor(Cake.SevenZip.Commands.UpdateCommand@)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Builder.UpdateCommandBuilder"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentArchive}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentFiles}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportArgumentBuilder{Cake#SevenZip#Arguments#IHaveArgumentDirectories}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchArchiveType}#Command">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressionMethod}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchPassword}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtSecurityInformation}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchNtfsAlternateStreams}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchCompressFilesOpenForWriting}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchTimestampFromMostRecentFile}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchWorkingDirectory}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchRecurseSubdirectories}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchIncludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchExcludeFilenames}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchUpdateOptions}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchSelfExtractingArchive}#Command">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Builder.UpdateCommandBuilder.Cake#SevenZip#Builder#ISupportSwitchBuilder{Cake#SevenZip#Switches#ISupportSwitchFullyQualifiedFilePaths}#Command">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Builder.NamespaceDoc">
            <summary>
            This namespace contain types related to running 7zip.
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Commands.AddCommand">
            <summary>
            Adds files to archive.
            (Command: a).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.AddCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.Volumes">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.CompressionMethod">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.ArchiveType">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.Password">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.NtSecurityInformation">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.NtfsAlternateStreams">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.CompressFilesOpenForWriting">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.TimestampFromMostRecentFile">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.WorkingDirectory">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.RecurseSubdirectories">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.IncludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.ExcludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.UpdateOptions">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.DeleteAfterCompression">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.SelfExtractingArchive">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.FullyQualifiedFilePaths">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.CommandName">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.AddCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand">
            <summary>
            BaseClass for add,update,delete.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Files">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Directories">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.DirectoryContents">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.Archive">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.CommandName">
            <summary>
            Gets the name of the command. (i.e. "add", "update" or "extract".)
            </summary>
            <value>
            The name of the command.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.ThrowOnMissingInputFiles">
            <summary>
            Gets a value indicating whether to throw on missing input files.
            </summary>
            <value>
              <c>true</c> if [throw on missing input files]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Commands.BaseAddLikeSyntaxCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.BaseCommand">
            <summary>
            BaseClass for Commands.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseCommand.CommandChar">
            <summary>
            Gets the command character. (e.g. "a", "u" or "e"...)
            </summary>
            <value>
            The command character.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseCommand.Switches">
            <summary>
            Gets all supported switches.
            </summary>
            <value>
            The switches.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Commands.BaseCommand.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <summary>
            Builds the arguments.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Cake.SevenZip.Commands.BaseCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <summary>
            adds only the arguments to the builder. (i.e. Archive, files, directories).
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="T:Cake.SevenZip.Commands.BaseOutputCommand`1">
            <summary>
            base for all commands that have output. (E.g. <see cref="T:Cake.SevenZip.Commands.InformationCommand"/>).
            </summary>
            <typeparam name="T">The type on the output.</typeparam>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseOutputCommand`1.OutputAction">
            <summary>
            Gets or sets the output-action, to be called when output is available.
            </summary>
            <value>
            The output-action.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseOutputCommand`1.RawOutputAction">
            <summary>
            Gets or sets the raw output-action, to be called when output is available.
            </summary>
            <value>
            The raw output-action.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BaseOutputCommand`1.OutputParser">
            <summary>
            Gets the output parser.
            </summary>
            <value>
            The output parser.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Commands.BaseOutputCommand`1.Cake#SevenZip#Parsers#ICanParseOutput#SetRawOutput(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the raw output.
            Used internally.
            </summary>
            <param name="rawOutput">The raw output.</param>
        </member>
        <member name="T:Cake.SevenZip.Commands.BenchmarkCommand">
            <summary>
            Measures speed of the CPU.
            Benchmark execution also can be used to check RAM for errors.
            (Command: b).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.BenchmarkCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.BenchmarkCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Commands.BenchmarkCommand"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.BenchmarkCommand.NumberOfIterations">
            <summary>
            Gets or sets the number of iterations.
            </summary>
            <value>
            The number of iterations.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BenchmarkCommand.NumberOfThreads">
            <summary>
            Gets or sets the number of threads.
            </summary>
            <value>
            The number of threads.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BenchmarkCommand.DictionarySize">
            <summary>
            Gets or sets the size of the dictionary.
            </summary>
            <value>
            The size of the dictionary.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BenchmarkCommand.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.BenchmarkCommand.OutputParser">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.BenchmarkCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.BenchmarkCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Commands.BenchmarkCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.CommandExtensions">
            <summary>
            Extensions for internal use.
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.CommandExtensions.RequireNotNull(System.Object,System.String,System.Object[])">
            <summary>
            Asserts that at least one of the given arguments is set.
            Throws a new <see cref="T:System.ArgumentException"/> with the given message, if arguments are not set.
            </summary>
            <param name="argument">The argument.</param>
            <param name="message">The message.</param>
            <param name="alternativeArguments">The alternative arguments.</param>
        </member>
        <member name="M:Cake.SevenZip.Commands.CommandExtensions.RequireNotEmpty(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable[])">
            <summary>
            Asserts that at least one of the given arguments is set and not empty.
            Throws a new <see cref="T:System.ArgumentException"/> with the given message, if arguments are not set.
            </summary>
            <param name="argument">The argument.</param>
            <param name="message">The message.</param>
            <param name="alternativeArguments">The alternative arguments.</param>
        </member>
        <member name="M:Cake.SevenZip.Commands.CommandExtensions.AppendPathsNullSafe``1(Cake.Core.IO.ProcessArgumentBuilder,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Appends the Paths, if not null.
            </summary>
            <typeparam name="T">The type. See <see cref="T:Cake.Core.IO.Path"/>.</typeparam>
            <param name="builder">The builder.</param>
            <param name="paths">The paths.</param>
            <param name="projection">The path-projection. Default is <c>Path.FullPath</c>.</param>
        </member>
        <member name="T:Cake.SevenZip.Commands.DeleteCommand">
            <summary>
            Deletes files from the archive.
            (Command: d).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.DeleteCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.RecurseSubdirectories">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.IncludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.ExcludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.WorkingDirectory">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.NtfsAlternateStreams">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.CompressionMethod">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.UpdateOptions">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.Password">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.SelfExtractingArchive">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.FullyQualifiedFilePaths">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.CommandName">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.DeleteCommand.ThrowOnMissingInputFiles">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.ExtractCommand">
            <summary>
            Extract files from archive - with or without full path
            (Commands: e and x).
            <para>
            With UseFullPath set to false, this represents the e-command:
            Extracts files from an archive to the current directory or to the output directory.
            The output directory can be specified by -o (Set Output Directory) switch.
            This command copies all extracted files to one directory.
            </para>
            <para>
            With UseFullPath set to true, this represents the x-command:
            Extracts files from an archive with their full paths in the current directory,
            or in an output directory if specified.
            </para>
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.ExtractCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.ExtractCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Commands.ExtractCommand"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.Archive">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.UseFullPaths">
            <summary>
            Gets or sets a value indicating whether to use full paths.
            Default is true.
            </summary>
            <value>
              <c>true</c> if [use full paths]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.ArchiveType">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.CompressionMethod">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.Password">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.NtSecurityInformation">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.NtfsAlternateStreams">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.RecurseSubdirectories">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.IncludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.ExcludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.IncludeArchiveFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.ExcludeArchiveFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.DisableParsingOfArchiveName">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.OverwriteMode">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.OutputDirectory">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.FullyQualifiedFilePaths">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ExtractCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Commands.ExtractCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.HashCommand">
            <summary>
            Calculates the hash for one or more files
            (Command: h).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.HashCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.HashCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Commands.HashCommand"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.Files">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.Directories">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.DirectoryContents">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.IncludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.ExcludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.RecurseSubdirectories">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.CompressionMethod">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.CompressFilesOpenForWriting">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.NtfsAlternateStreams">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.HashFunctions">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.OutputParser">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.HashCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Commands.HashCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.ICommand">
            <summary>
            Interface for all commands. (E.g. <see cref="T:Cake.SevenZip.Commands.AddCommand"/>).
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.ICommand.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <summary>
            Builds the arguments.
            Used internally.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="T:Cake.SevenZip.Commands.InformationCommand">
            <summary>
            Show information about supported formats
            (Command: i).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.InformationCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.InformationCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Commands.InformationCommand"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.InformationCommand.OutputParser">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.InformationCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.InformationCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Commands.InformationCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.ListCommand">
            <summary>
            Show List about supported formats
            (Command: i).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.ListCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.ListCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Commands.ListCommand"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.Archive">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.ExcludeFilenames">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.ShowTechnicalInformation">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.IncludeArchiveFilenames">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.DisableParsingOfArchiveName">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.ExcludeArchiveFilenames">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.IncludeFilenames">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.NtfsAlternateStreams">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.Password">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.RecurseSubdirectories">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.ArchiveType">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.OutputParser">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.ListCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Commands.ListCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.RenameCommand">
            <summary>
            Show Rename about supported formats
            (Command: rn).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.RenameCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.RenameCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Commands.RenameCommand"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.Archive">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.RenamePairs">
            <summary>
            Gets the files to be renamed.
            </summary>
            <value>
            The files to be renamed.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.IncludeFilenames">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.CompressionMethod">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.Password">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.RecurseSubdirectories">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.TimestampFromMostRecentFile">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.UpdateOptions">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.WorkingDirectory">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.RenameCommand.ExcludeFilenames">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.Commands.RenameCommand.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.TestCommand">
            <summary>
            Test one or more archives
            (Command: t).
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.TestCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Commands.TestCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Commands.TestCommand"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.Archive">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.IncludeArchiveFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.ExcludeArchiveFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.DisableParsingOfArchiveName">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.IncludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.ExcludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.Password">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.NtfsAlternateStreams">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.RecurseSubdirectories">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.Files">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.OutputParser">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.CommandChar">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.TestCommand.Switches">
            <inheritdoc />
        </member>
        <member name="M:Cake.SevenZip.Commands.TestCommand.BuildArgumentParams(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.UpdateCommand">
            <summary>
            Update older files in the archive and add files that are not already in the archive.
            (Command: u)
            Note: the updating of solid .7z archives can be slow, since it can require some re-compression.
            <para>
            The builder is <see cref="T:Cake.SevenZip.Builder.UpdateCommandBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.CompressionMethod">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.ArchiveType">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.Password">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.NtSecurityInformation">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.NtfsAlternateStreams">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.CompressFilesOpenForWriting">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.TimestampFromMostRecentFile">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.WorkingDirectory">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.RecurseSubdirectories">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.IncludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.ExcludeFilenames">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.UpdateOptions">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.SelfExtractingArchive">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.FullyQualifiedFilePaths">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.CommandName">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.CommandChar">
            <inheritdoc/>
        </member>
        <member name="P:Cake.SevenZip.Commands.UpdateCommand.Switches">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Commands.NamespaceDoc">
            <summary>
            This namespace contain types related to running 7zip.
            </summary>
        </member>
        <member name="T:Cake.SevenZip.NamespaceDoc">
            <summary>
            This namespace contain types related to running 7zip.
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Parsers.NamespaceDoc">
            <summary>
            This namespace contain types related to running 7zip.
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Parsers.BenchmarkOutputParser">
            <summary>
            Parses outputs of the <see cref="T:Cake.SevenZip.Commands.BenchmarkCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.IOutputParser`1" />
        </member>
        <member name="M:Cake.SevenZip.Parsers.BenchmarkOutputParser.Parse(System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Parsers.HashOutputParser">
            <summary>
            Parses outputs of the <see cref="T:Cake.SevenZip.Commands.HashCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.IOutputParser`1" />
        </member>
        <member name="M:Cake.SevenZip.Parsers.HashOutputParser.Parse(System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Parsers.IArchivedFileListOutput">
            <summary>
            The parsed output one file inside an <see cref="T:Cake.SevenZip.Parsers.IArchiveListOutput"/> of the <see cref="T:Cake.SevenZip.Commands.ListCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.IListOutput"/>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchivedFileListOutput.FileDate">
            <summary>
            Gets the file date.
            </summary>
            <value>
            The file date.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchivedFileListOutput.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchivedFileListOutput.Size">
            <summary>
            Gets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchivedFileListOutput.CompressedSize">
            <summary>
            Gets the compressed size.
            </summary>
            <value>
            The compressed size.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchivedFileListOutput.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IArchiveListOutput">
            <summary>
            The parsed output one archive of the <see cref="T:Cake.SevenZip.Commands.ListCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.IListOutput"/>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveListOutput.Path">
            <summary>
            Gets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveListOutput.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveListOutput.PhysicalSize">
            <summary>
            Gets the size of the physical.
            </summary>
            <value>
            The size of the physical.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveListOutput.Size">
            <summary>
            Gets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveListOutput.CompressedSize">
            <summary>
            Gets the size of the compressed.
            </summary>
            <value>
            The size of the compressed.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveListOutput.ArchiveDate">
            <summary>
            Gets the date.
            </summary>
            <value>
            The date.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveListOutput.Files">
            <summary>
            Gets the files and folders.
            </summary>
            <value>
            The files and folders.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IArchiveTestOutput">
            <summary>
            The parsed output of individual archives the <see cref="T:Cake.SevenZip.Commands.TestCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.ITestOutput"/>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveTestOutput.FileName">
            <summary>
            Gets the filename of the archive.
            </summary>
            <value>
            The filename of the archive.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveTestOutput.IsOk">
            <summary>
            Gets a value indicating whether the test for this archive was OK.
            </summary>
            <value>
              <c>true</c> if this archive is OK; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IArchiveTestOutput.Output">
            <summary>
            Gets the output.
            </summary>
            <value>
            The output.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IBenchmarkOutput">
            <summary>
            The parsed Output of the <see cref="T:Cake.SevenZip.Commands.BenchmarkCommand"/>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IBenchmarkOutput.Benchmark">
            <summary>
            Gets the benchmark-results.
            </summary>
            <value>
            The results.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.ICanParseOutput">
            <summary>
            Internal Interface for Commands that can parse the output of the run.
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Parsers.ICanParseOutput.SetRawOutput(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the raw output for parsing.
            </summary>
            <param name="rawOutput">The raw output.</param>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IFileHash">
            <summary>
            The information of one file, as generated by the <see cref="T:Cake.SevenZip.Commands.HashCommand"/>.
            <para>
            Used in the <see cref="T:Cake.SevenZip.Parsers.IHashOutput"/>.
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IFileHash.Hashes">
            <summary>
            Gets the hash. Content depends on the selected hash-algorithm.
            </summary>
            <value>
            The hash.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IFileHash.FilePath">
            <summary>
            Gets the path of the file.
            </summary>
            <value>
            The path of the file.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IFileHash.Size">
            <summary>
            Gets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IHash">
            <summary>
            Represents a hash (for a given hash-function) in the output of the <see cref="T:Cake.SevenZip.Commands.HashCommand"/>.
            <para>
            Used in <see cref="T:Cake.SevenZip.Parsers.IHashOutput"/> and <see cref="T:Cake.SevenZip.Parsers.IFileHash"/>.
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IHash.HashFunction">
            <summary>
            Gets the hash-function.
            </summary>
            <value>
            The hash-function.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IHash.Hash">
            <summary>
            Gets the hash.
            </summary>
            <value>
            The hash.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IHashOutput">
            <summary>
            The parsed output of the <see cref="T:Cake.SevenZip.Commands.HashCommand"/>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IHashOutput.Files">
            <summary>
            Gets the output for all individual archives.
            </summary>
            <value>
            The individual outputs.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IHashOutput.SumOfHashes">
            <summary>
            Gets the sum of hashes.
            </summary>
            <value>
            The sum of hashes.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IHashOutput.SumOfSizes">
            <summary>
            Gets the sum of sizes.
            </summary>
            <value>
            The sum of sizes.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IHashOutput.HashesOfData">
            <summary>
            Gets the hash of data.
            </summary>
            <value>
            The hash of data.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IHashOutput.HashOfDataAndNames">
            <summary>
            Gets the hash of data and names.
            </summary>
            <value>
            The hash of data and names.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IInformationOutput">
            <summary>
            The parsed Output of the <see cref="T:Cake.SevenZip.Commands.InformationCommand"/>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IInformationOutput.Codecs">
            <summary>
            Gets the codecs.
            </summary>
            <value>
            The codecs.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IInformationOutput.Formats">
            <summary>
            Gets the formats.
            </summary>
            <value>
            The formats.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IInformationOutput.Hashers">
            <summary>
            Gets the hashers.
            </summary>
            <value>
            The hashers.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IInformationOutput.Libs">
            <summary>
            Gets the libs.
            </summary>
            <value>
            The libs.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IListOutput">
            <summary>
            The parsed Output of the <see cref="T:Cake.SevenZip.Commands.ListCommand"/>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IListOutput.Archives">
            <summary>
            Gets the files.
            </summary>
            <value>
            The files.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IListOutput.Size">
            <summary>
            Gets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IListOutput.CompressedSize">
            <summary>
            Gets the size of the compressed.
            </summary>
            <value>
            The size of the compressed.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.InformationOutputParser">
            <summary>
            Parses outputs of the <see cref="T:Cake.SevenZip.Commands.InformationCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.IOutputParser`1" />
        </member>
        <member name="M:Cake.SevenZip.Parsers.InformationOutputParser.Parse(System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Parsers.InformationOutputParser.InformationOutput">
            <summary>
            Implements <see cref="T:Cake.SevenZip.Parsers.IInformationOutput"/>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.InformationOutputParser.InformationOutput.Information">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Parsers.InformationOutputParser.InformationOutput.Libs">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Parsers.InformationOutputParser.InformationOutput.Formats">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Parsers.InformationOutputParser.InformationOutput.Codecs">
            <inheritdoc />
        </member>
        <member name="P:Cake.SevenZip.Parsers.InformationOutputParser.InformationOutput.Hashers">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Parsers.IOutput">
            <summary>
            General output. Common to all <see cref="T:Cake.SevenZip.Parsers.IOutputParser`1"/>s.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.IOutput.Information">
            <summary>
            Gets the information (version etc.) from 7z.
            </summary>
            <value>
            The information.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.IOutputParser`1">
            <summary>
            Interface for all commands supporting a parsed output.
            </summary>
            <typeparam name="T">The output object.</typeparam>
        </member>
        <member name="M:Cake.SevenZip.Parsers.IOutputParser`1.Parse(System.String[])">
            <summary>
            Parses the stream.
            </summary>
            <param name="rawOutput">The output, as captured from 7zip.</param>
            <returns>the parsed result.</returns>
        </member>
        <member name="T:Cake.SevenZip.Parsers.ITestOutput">
            <summary>
            The parsed output of the <see cref="T:Cake.SevenZip.Commands.TestCommand"/>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Parsers.ITestOutput.Archives">
            <summary>
            Gets the output for all individual archives.
            </summary>
            <value>
            The individual outputs.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Parsers.ListOutputParser">
            <summary>
            Parses outputs of the <see cref="T:Cake.SevenZip.Commands.ListCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.IOutputParser`1" />
        </member>
        <member name="M:Cake.SevenZip.Parsers.ListOutputParser.Parse(System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Parsers.TestOutputParser">
            <summary>
            Parses outputs of the <see cref="T:Cake.SevenZip.Commands.TestCommand"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Parsers.IOutputParser`1" />
        </member>
        <member name="M:Cake.SevenZip.Parsers.TestOutputParser.Parse(System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Switches.NamespaceDoc">
            <summary>
            This namespace contain types related to running 7zip.
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Switches.BaseBoolSwitch">
            <summary>
            BaseClass for simple boolean switches.
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
        </member>
        <member name="M:Cake.SevenZip.Switches.BaseBoolSwitch.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.BaseBoolSwitch"/> class.
            </summary>
            <param name="switch">The switch. (e.g "sni" or "sns").</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.BaseBoolSwitch.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.BaseSwitchCollection`1">
            <summary>
            Base for switches that can be given multiple times.
            An example is <see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/> (-x!*.pdf -x!*.xml) which uses
            <see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilenameCollection"/> (which implements this BaseCollection) to set
            multiple <see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilename"/>.
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
            <typeparam name="T">The Switch-Type.</typeparam>
        </member>
        <member name="M:Cake.SevenZip.Switches.BaseSwitchCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.BaseSwitchCollection`1"/> class.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.BaseSwitchCollection`1.Switches">
            <summary>
            Gets the switches.
            </summary>
            <value>
            The switches.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.BaseSwitchCollection`1.Add(`0)">
            <summary>
            Adds the specified switch.
            </summary>
            <param name="switch">The switch.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.BaseSwitchCollection`1.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitch">
            <summary>
            Interfaces for all switches.
            Commands "support" switches by implementing an ISupportSwitch
            (e.g. <see cref="T:Cake.SevenZip.Switches.ISupportSwitchPassword"/> is implemented in all commands
            that support setting a password (-p).
            </summary>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchArchiveType">
            <summary>
            <para>
            Command supports switch -t (set Type of archive).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchArchiveType"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchArchiveTypeBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchArchiveType.ArchiveType">
            <summary>
            Gets or sets the SwitchArchiveType.
            </summary>
            <value>
            SwitchArchiveType.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchCompressFilesOpenForWriting">
            <summary>
            <para>
            Command supports switch -ssw (Compress files open for writing).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchCompressFilesOpenForWriting"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchCompressFilesOpenForWritingBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchCompressFilesOpenForWriting.CompressFilesOpenForWriting">
            <summary>
            Gets or sets the SwitchCompressFilesOpenForWriting.
            </summary>
            <value>
            SwitchCompressFilesOpenForWriting.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod">
            <summary>
            <para>
            Command supports switch -m (Set compression Method).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchCompressionMethod"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchCompressionMethodBuilder"/>.
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod.CompressionMethod">
            <summary>
            Gets or sets the compression method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchDeleteAfterCompression">
            <summary>
            <para>
            Command supports switch -sdel (Delete files after compression).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchDeleteAfterCompression"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchDeleteAfterCompressionBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchDeleteAfterCompression.DeleteAfterCompression">
            <summary>
            Gets or sets the SwitchDeleteAfterCompression.
            </summary>
            <value>
            SwitchDeleteAfterCompression.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchDisableParsingOfArchiveName">
            <summary>
            <para>
            Command supports switch -an (Disable parsing of archive_name).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchDisableParsingOfArchiveName"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchDisableParsingOfArchiveNameBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchDisableParsingOfArchiveName.DisableParsingOfArchiveName">
            <summary>
            Gets or sets the SwitchDisableParsingOfArchiveName.
            </summary>
            <value>
            SwitchDisableParsingOfArchiveName.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames">
            <summary>
            <para>
            Command supports switch -ax (Exclude archive filenames).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilenameCollection"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchExcludeArchiveFilenamesBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames.ExcludeArchiveFilenames">
            <summary>
            Gets or sets the SwitchExcludeArchiveFilenameCollection.
            </summary>
            <value>
            SwitchExcludeArchiveFilenameCollection.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames">
            <summary>
            <para>
            Command supports switch -x (Exclude filenames).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilenameCollection"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchExcludeFilenamesBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames.ExcludeFilenames">
            <summary>
            Gets or sets the SwitchExcludeFilenameCollection.
            </summary>
            <value>
            SwitchExcludeFilenameCollection.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchFullyQualifiedFilePaths">
            <summary>
            <para>
            Command supports switch -spf/-spf2 (Use fully qualified file paths).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchFullyQualifiedFilePaths"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchFullyQualifiedFilePathsBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchFullyQualifiedFilePaths.FullyQualifiedFilePaths">
            <summary>
            Gets or sets the SwitchFullyQualifiedFilePaths.
            </summary>
            <value>
            SwitchFullyQualifiedFilePaths.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchIncludeArchiveFilenames">
            <summary>
            <para>
            Command supports switch -ai (Include archive filenames).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchIncludeArchiveFilenameCollection"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchIncludeArchiveFilenamesBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchIncludeArchiveFilenames.IncludeArchiveFilenames">
            <summary>
            Gets or sets the SwitchIncludeArchiveFilenameCollection.
            </summary>
            <value>
            SwitchIncludeArchiveFilenameCollection.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames">
            <summary>
            <para>
            Command supports switch -i (Include filenames).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchIncludeFilenameCollection"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchIncludeFilenamesBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames.IncludeFilenames">
            <summary>
            Gets or sets the SwitchIncludeFilenameCollection.
            </summary>
            <value>
            SwitchIncludeFilenameCollection.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchNtfsAlternateStreams">
            <summary>
            <para>
            Command supports switch -sns (NTFS alternate Streams).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchNtfsAlternateStreams"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchNtfsAlternateStreamsBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchNtfsAlternateStreams.NtfsAlternateStreams">
            <summary>
            Gets or sets the SwitchNtfsAlternateStreams.
            </summary>
            <value>
            SwitchNtfsAlternateStreams.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchNtSecurityInformation">
            <summary>
            <para>
            Command supports switch -sni (NT security information).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchNtSecurityInformation"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchNtSecurityInformationBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchNtSecurityInformation.NtSecurityInformation">
            <summary>
            Gets or sets the SwitchNtSecurityInformation.
            </summary>
            <value>
            SwitchNtSecurityInformation.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchOutputDirectory">
            <summary>
            <para>
            Command supports switch -o (set Output directory).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchOutputDirectory"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchOutputDirectoryBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchOutputDirectory.OutputDirectory">
            <summary>
            Gets or sets the SwitchOutputDirectory.
            </summary>
            <value>
            SwitchOutputDirectory.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchOverwriteMode">
            <summary>
            <para>
            Command supports switch -ao (Overwrite mode).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchOverwriteMode"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchOverwriteModeBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchOverwriteMode.OverwriteMode">
            <summary>
            Gets or sets the SwitchOverwriteMode.
            </summary>
            <value>
            SwitchOverwriteMode.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchPassword">
            <summary>
            <para>
            Command supports switch -p (set Password) .
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchPassword"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchPasswordBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchPassword.Password">
            <summary>
            Gets or sets the SwitchPassword.
            </summary>
            <value>
            SwitchPassword.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchRecurseSubdirectories">
            <summary>
            <para>
            Command supports switch -r (Recurse subdirectories).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchRecurseSubdirectories"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchRecurseSubdirectoriesBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchRecurseSubdirectories.RecurseSubdirectories">
            <summary>
            Gets or sets the SwitchRecurseSubdirectories.
            </summary>
            <value>
            SwitchRecurseSubdirectories.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchSelfExtractingArchive">
            <summary>
            <para>
            Command supports switch -sfx (Create SFX archive).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchSelfExtractingArchive"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchSelfExtractingArchiveBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchSelfExtractingArchive.SelfExtractingArchive">
            <summary>
            Gets or sets the SwitchSelfExtractingArchive.
            </summary>
            <value>
            SwitchSelfExtractingArchive.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchSetHashFunction">
            <summary>
            <para>
            Command supports switch -scrc (Set hash function).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchSetHashFunction"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchSetHashFunctionBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchSetHashFunction.HashFunctions">
            <summary>
            Gets or sets the SwitchNtfsAlternateStreams.
            </summary>
            <value>
            SwitchNtfsAlternateStreams.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchShowTechnicalInformation">
            <summary>
            <para>
            Command supports switch -slt (Show technical information).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchShowTechnicalInformation"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchShowTechnicalInformationBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchShowTechnicalInformation.ShowTechnicalInformation">
            <summary>
            Gets or sets the SwitchDeleteAfterCompression.
            </summary>
            <value>
            SwitchDeleteAfterCompression.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchTimestampFromMostRecentFile">
            <summary>
            <para>
            Command supports switch -stl (Set archive time-stamp from the most recently modified file).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchSetTimestampFromMostRecentFile"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchSetTimestampFromMostRecentFileBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchTimestampFromMostRecentFile.TimestampFromMostRecentFile">
            <summary>
            Gets or sets the SwitchSetTimestampFromMostRecentFile.
            </summary>
            <value>
            SwitchSetTimestampFromMostRecentFile.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchUpdateOptions">
            <summary>
            <para>
            Command supports switch -u (Update options).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchUpdateOptions"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchUpdateOptionsBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchUpdateOptions.UpdateOptions">
            <summary>
            Gets or sets the SwitchUpdateOptions.
            </summary>
            <value>
            SwitchUpdateOptions.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchVolume">
            <summary>
            <para>
            Command supports switch -v (Create Volumes).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchVolumeCollection"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchVolumeBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchVolume.Volumes">
            <summary>
            Gets or sets the SwitchVolumeCollection.
            </summary>
            <value>
            SwitchVolumeCollection.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISupportSwitchWorkingDirectory">
            <summary>.
            <para>
            Command supports switch -w (Working directory).
            </para>
            <para>
            The Switch is <see cref="T:Cake.SevenZip.Switches.SwitchWorkingDirectory"/>.
            </para>
            <para>
            The Builder is <see cref="T:Cake.SevenZip.Builder.SwitchWorkingDirectoryBuilder"/>.
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISupportSwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.ISupportSwitchWorkingDirectory.WorkingDirectory">
            <summary>
            Gets or sets the SwitchWorkingDirectory.
            </summary>
            <value>
            SwitchWorkingDirectory.
            </value>
        </member>
        <member name="T:Cake.SevenZip.Switches.ISwitch">
            <summary>
            Base for all Switches.
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.ISwitch.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <summary>
            Builds the arguments using the builder.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.OverwriteMode">
            <summary>
            <para>
            Specifies the overwrite mode during extraction, to overwrite files already present on disk.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchOverwriteMode"/></description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.OverwriteMode.Overwrite">
            <summary>
            Gets the Overwrite-Mode.
            Overwrite All existing files without prompt.
            </summary>
            <value>
            The overwrite-Mode.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.OverwriteMode.Skip">
            <summary>
            Gets the skip-Mode.
            Skip extracting of existing files.
            </summary>
            <value>
            The skip-Mode.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.OverwriteMode.RenameExtracting">
            <summary>
            Gets the rename extracting-Mode.
            aUto rename extracting file (for example, name.txt will be renamed to name_1.txt).
            </summary>
            <value>
            The rename extracting-Mode.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.OverwriteMode.RenameExisting">
            <summary>
            Gets the rename existing-Mode.
            auto rename existing file (for example, name.txt will be renamed to name_1.txt).
            </summary>
            <value>
            The rename existing-Mode.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.OverwriteMode.ToString">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Switches.RecurseType">
            <summary>
            <para>
            Specifies the method of treating wildcards and filenames on the command line.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchIncludeFilename"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilename"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchIncludeArchiveFilename"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilename"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchRecurseSubdirectories"/></description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.RecurseType.Enable">
            <summary>
            Gets the enable-type.
            </summary>
            <value>
            The enable-type.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.RecurseType.Disable">
            <summary>
            Gets the disable-type.
            </summary>
            <value>
            The disable-type.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.RecurseType.EnableOnlyForWildcardNames">
             <summary>
             Gets the enable only for wildcard names -type.
            
             (Probably this is not needed in Cake.7zip -
             there are wildcard-names in this implementation.)
             </summary>
             <value>
             The enable only for wildcard names -type.
             </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.RecurseType.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchArchiveType">
            <summary>
            <para>
            -t (set Type of archive) switch.
            </para>
            <para>
            Specifies the type of archive.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchArchiveType"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchArchiveTypeBuilder"/></description></item>
            </list>
            </para>
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchArchiveType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchArchiveType"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.SevenZip">
            <summary>
            Gets the type: 7-Zip.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.Xz">
            <summary>
            Gets the type: XZ.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.Lzma">
            <summary>
            Gets the type: lzma.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.Cab">
            <summary>
            Gets the type: CAB.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.Zip">
            <summary>
            Gets the type: Zip.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.Gzip">
            <summary>
            Gets the type: GZip.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.Tar">
            <summary>
            Gets the type: tar.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchArchiveType.Bzip2">
            <summary>
            Gets the type: BZip2.
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchArchiveType.Volumes">
            <summary>
            Append ".split" to the type.
            This is needed when extracting/testing multi-volume archives.
            </summary>
            <returns>A <see cref="T:Cake.SevenZip.Switches.SwitchArchiveType"/> with <c>.split</c> appended.</returns>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchArchiveType.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchCompressFilesOpenForWriting">
            <summary>
            <para>
            -ssw (Compress files open for writing) switch.
            </para>
            <para>
            Compresses files open for writing by another applications.
            If this switch is not set, 7-zip doesn't include such files to archive.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressFilesOpenForWriting"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchCompressFilesOpenForWritingBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchCompressFilesOpenForWriting.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchCompressFilesOpenForWriting"/> class.
            </summary>
            <param name="value">set value.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchCompressionMethod">
            <summary>
            <para>
            -m (Set compression Method) switch.
            </para>
            <para>
            Specifies the compression method.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchCompressionMethod"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchCompressionMethodBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchCompressionMethod.Level">
            <summary>
            Sets the level.
            parameter: x.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchCompressionMethod.Method">
            <summary>
            Sets the method.
            parameter: m.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchCompressionMethod.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchDeleteAfterCompression">
            <summary>
            <para>
            -sdel (Delete files after compression) switch.
            </para>
            <para>
            If -sdel switch is specified, 7-Zip deletes files after including to archive.
            So it works like moving files to archive.
            7-Zip deletes files at the end of operation and only if archive was successfully created.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchDeleteAfterCompression"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchDeleteAfterCompressionBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchDeleteAfterCompression.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchDeleteAfterCompression"/> class.
            </summary>
            <param name="value">set value.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchDisableParsingOfArchiveName">
            <summary>
            <para>
            -an (Disable parsing of archive_name) switch.
            </para>
            <para>
            Disables parsing of the archive_name field on the command line.
            This switch must be used with the -ai (Include archives) switch.
            If you use a file list for your archives, you specify it with the -ai switch,
            so you need to disable parsing of archive_name field from command line.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchDisableParsingOfArchiveName"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchDisableParsingOfArchiveNameBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchDisableParsingOfArchiveName.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchDisableParsingOfArchiveName"/> class.
            </summary>
            <param name="value">The Value.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilename">
            <summary>
            <para>
            -ax (Exclude archive filenames) switch.
            </para>
            <para>
            Specifies archives to be excluded from the operation.
            Multiple exclude archive switches are supported.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeArchiveFilenames"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchExcludeArchiveFilenamesBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilenameCollection"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchExcludeArchiveFilename.#ctor(System.String,Cake.SevenZip.Switches.RecurseType)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilename"/> class.
            </summary>
            <param name="wildcard">The wildcard.</param>
            <param name="recurseType">Type of the recurse.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchExcludeArchiveFilename.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilenameCollection">
            <summary>
            A Collection of <see cref="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilename"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.BaseSwitchCollection`1" />
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchExcludeArchiveFilenameCollection.#ctor(Cake.SevenZip.Switches.SwitchExcludeArchiveFilename,Cake.SevenZip.Switches.SwitchExcludeArchiveFilename[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchExcludeArchiveFilenameCollection"/> class.
            </summary>
            <param name="initial">The initial.</param>
            <param name="additional">The additional.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchExcludeFilename">
            <summary>
            <para>
            -x (Exclude filenames) switch.
            </para>
            <para>
            Specifies which filenames or wildcard-names must be excluded from the operation.
            Multiple exclude switches are supported.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchExcludeFilenamesBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilenameCollection"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchExcludeFilename.#ctor(System.String,Cake.SevenZip.Switches.RecurseType)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilename"/> class.
            </summary>
            <param name="wildcard">The wildcard.</param>
            <param name="recurseType">Type of the recurse.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchExcludeFilename.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchExcludeFilenameCollection">
            <summary>
            A Collection of <see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilename"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.BaseSwitchCollection`1" />
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchExcludeFilenameCollection.#ctor(Cake.SevenZip.Switches.SwitchExcludeFilename,Cake.SevenZip.Switches.SwitchExcludeFilename[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilenameCollection"/> class.
            </summary>
            <param name="initial">The initial.</param>
            <param name="additional">The additional.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchFullyQualifiedFilePaths">
            <summary>
            -spf (Use fully qualified file paths) switch.
            (Also, -spf2 for full paths without drive letters.)
            <para>
            Enables the mode that allows to use fully qualified file paths in archives.
            If -spf switch is not specified, 7-Zip reduces file paths to relative paths when
            it adds files to archive, and 7-Zip converts paths to relative paths when you extract archive.
            If -spf switch is specified, 7-Zip doesn't try to process or convert paths.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchFullyQualifiedFilePaths"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchFullyQualifiedFilePathsBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchFullyQualifiedFilePaths.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchFullyQualifiedFilePaths"/> class.
            The Default for <see cref="P:Cake.SevenZip.Switches.SwitchFullyQualifiedFilePaths.IncludeDriveLetter"/> is <c>true</c>.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchFullyQualifiedFilePaths.IncludeDriveLetter">
            <summary>
            Sets a value indicating whether to include drive letter.
            </summary>
            <value>
              <c>true</c> to include drive letter (switch -spf); otherwise, <c>false</c> (switch -spf2).
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchFullyQualifiedFilePaths.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchIncludeArchiveFilename">
            <summary>
            <para>
            -ai (Include archive filenames) switch.
            </para>
            <para>
            Specifies additional include archive filenames and wildcards.
            Multiple include switches are supported.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchExcludeFilenames"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchExcludeFilenamesBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchExcludeFilenameCollection"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchIncludeArchiveFilename.#ctor(System.String,Cake.SevenZip.Switches.RecurseType)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchIncludeArchiveFilename"/> class.
            </summary>
            <param name="wildcard">The wildcard.</param>
            <param name="recurseType">Type of the recurse.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchIncludeArchiveFilename.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchIncludeArchiveFilenameCollection">
            <summary>
            A Collection of <see cref="T:Cake.SevenZip.Switches.SwitchIncludeArchiveFilename"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.BaseSwitchCollection`1" />
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchIncludeArchiveFilenameCollection.#ctor(Cake.SevenZip.Switches.SwitchIncludeArchiveFilename,Cake.SevenZip.Switches.SwitchIncludeArchiveFilename[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchIncludeArchiveFilenameCollection"/> class.
            </summary>
            <param name="initial">The initial.</param>
            <param name="additional">The additional.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchIncludeFilename">
            <summary>
            <para>
            -i (Include filenames) switch.
            </para>
            <para>
            Specifies additional include filenames and wildcards.
            Multiple include switches are supported.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchIncludeFilenames"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchIncludeFilenamesBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchIncludeFilenameCollection"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchIncludeFilename.#ctor(System.String,Cake.SevenZip.Switches.RecurseType)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchIncludeFilename"/> class.
            </summary>
            <param name="wildcard">The wildcard.</param>
            <param name="recurseType">Type of the recurse.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchIncludeFilename.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchIncludeFilenameCollection">
            <summary>
            A Collection of <see cref="T:Cake.SevenZip.Switches.SwitchIncludeFilename"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.BaseSwitchCollection`1" />
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchIncludeFilenameCollection.#ctor(Cake.SevenZip.Switches.SwitchIncludeFilename,Cake.SevenZip.Switches.SwitchIncludeFilename[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchIncludeFilenameCollection"/> class.
            </summary>
            <param name="initial">The initial.</param>
            <param name="additional">The additional.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchNtfsAlternateStreams">
            <summary>
            <para>
            -sns (Store NTFS alternate Streams) switch.
            </para>
            <para>
            If -sns mode is enabled, 7-Zip processes NTFS Alternate Data Streams for files and folders.
            Current version of 7-Zip can store NTFS alternate streams only to WIM archives.
            Note: 7-Zip can't include alternate streams to archives on 32-bit Windows XP and older systems.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtfsAlternateStreams"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchNtfsAlternateStreamsBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchNtfsAlternateStreams.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchNtfsAlternateStreams"/> class.
            </summary>
            <param name="value">set value.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchNtSecurityInformation">
            <summary>
            <para>
            -sni (Store NT security information) switch.
            </para>
            <para>
            Use this switch to store and restore NT (NTFS) security information for files and directories.
            Note that only NTFS file system supports that feature.
            Current version of 7-Zip can store NT security information only to WIM archives.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchNtSecurityInformation"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchNtSecurityInformationBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchNtSecurityInformation.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchNtSecurityInformation"/> class.
            </summary>
            <param name="value">the value.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchOutputDirectory">
            <summary>
            <para>
            -o (set Output directory) switch.
            </para>
            <para>
            Specifies a destination directory where files are to be extracted.
            This switch can be used only with extraction commands.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchOutputDirectory"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchOutputDirectoryBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchOutputDirectory.#ctor(Cake.Core.IO.DirectoryPath)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchOutputDirectory"/> class.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchOutputDirectory.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchOverwriteMode">
            <summary>
            <para>
            -ao (Overwrite mode) switch.
            </para>
            <para>
            Specifies the overwrite mode during extraction, to overwrite files already present on disk.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchOverwriteMode"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchOverwriteModeBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchOverwriteMode.#ctor(Cake.SevenZip.Switches.OverwriteMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchOverwriteMode"/> class.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchOverwriteMode.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchPassword">
            <summary>
            <para>
            -p (set Password) switch.
            </para>
            <para>
            Specifies password.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchPassword"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchPasswordBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchPassword.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchPassword"/> class.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchPassword.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchRecurseSubdirectories">
            <summary>
            <para>
            -r (Recurse subdirectories) switch.
            </para>
            <para>
            Specifies the method of treating wildcards and filenames on the command line.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchRecurseSubdirectories"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchRecurseSubdirectoriesBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchRecurseSubdirectories.#ctor(Cake.SevenZip.Switches.RecurseType)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchRecurseSubdirectories"/> class.
            </summary>
            <param name="recurse">The recuse-type.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchRecurseSubdirectories.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchSelfExtractingArchive">
            <summary>
            <para>
            -sfx (Create SFX archive) switch.
            </para>
            <para>
            Specifies the SFX module that will be combined with the archive.
            This module must be placed in the same directory as the 7z.exe.
            If {SFX_Module} is not assigned, 7-Zip will use standard console SFX module 7zCon.sfx.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchSelfExtractingArchive"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchSelfExtractingArchiveBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchSelfExtractingArchive.SfxModule">
            <summary>
            Sets the SFX module that will be combined with the archive.
            This module must be placed in the same directory as the 7z.exe.
            If no module is assigned, 7-Zip will use standard console SFX module 7zCon.sfx.
            </summary>
            <value>
            The SFX module.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchSelfExtractingArchive.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchSetHashFunction">
            <summary>
            <para>
            -scrc (Set hash function) switch.
            </para>
            <para>
            Sets hash function for "extract" and "hash" commands.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchSetHashFunction"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchSetHashFunctionBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchSetHashFunction.Crc32">
            <summary>
            Gets the CRC32 hash-function.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchSetHashFunction.Crc64">
            <summary>
            Gets the CRC64 hash-function.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchSetHashFunction.Sha1">
            <summary>
            Gets the sha1 hash-function.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchSetHashFunction.Sha256">
            <summary>
            Gets the sha256 hash-function.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchSetHashFunction.Blake2Sp">
            <summary>
            Gets the blake2sp hash-function.
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchSetHashFunction.All">
            <summary>
            Gets the "*" hash-functions. (I.e. uses all possible hash-functions.)
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchSetHashFunction.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchSetHashFunctionCollection">
            <summary>
            A Collection of <see cref="T:Cake.SevenZip.Switches.SwitchSetHashFunction"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.BaseSwitchCollection`1" />
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchSetHashFunctionCollection.#ctor(Cake.SevenZip.Switches.SwitchSetHashFunction,Cake.SevenZip.Switches.SwitchSetHashFunction[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchSetHashFunctionCollection"/> class.
            </summary>
            <param name="initial">The initial.</param>
            <param name="additional">The additional.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchSetTimestampFromMostRecentFile">
            <summary>
            <para>
            -stl (Set archive time-stamp from the most recently modified file) switch.
            </para>
            <para>
            If -stl switch is specified, 7-Zip sets time-stamp for archive file as
            time-stamp from the most recently modified file in that archive.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchTimestampFromMostRecentFile"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchSetTimestampFromMostRecentFileBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchSetTimestampFromMostRecentFile.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchSetTimestampFromMostRecentFile"/> class.
            </summary>
            <param name="value">set value.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchShowTechnicalInformation">
            <summary>
            <para>
            -slt (Show technical information) switch.
            </para>
            <para>
            Sets technical mode for l (List) command.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchShowTechnicalInformation"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchShowTechnicalInformationBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchShowTechnicalInformation.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchShowTechnicalInformation"/> class.
            </summary>
            <param name="value">set value.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchUpdateOptions">
            <summary>
            <para>
            -u (Update options) switch.
            </para>
            <para>
            Specifies how to update files in an archive and (or) how to create new archives.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchUpdateOptions"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchUpdateOptionsBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.P">
            <summary>
            Sets the <see cref="T:Cake.SevenZip.Switches.UpdateAction"/> for the p-state.
            File exists in archive, but is not matched with wildcard.
            </summary>
            <value>
            The <see cref="T:Cake.SevenZip.Switches.UpdateAction"/>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.Q">
            <summary>
            Sets the <see cref="T:Cake.SevenZip.Switches.UpdateAction"/> for the q-state.
            File exists in archive, but doesn't exist on disk.
            </summary>
            <value>
            The <see cref="T:Cake.SevenZip.Switches.UpdateAction"/>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.R">
            <summary>
            Sets the <see cref="T:Cake.SevenZip.Switches.UpdateAction"/> for the r-state.
            File doesn't exist in archive, but exists on disk.
            </summary>
            <value>
            The <see cref="T:Cake.SevenZip.Switches.UpdateAction"/>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.X">
            <summary>
            Sets the <see cref="T:Cake.SevenZip.Switches.UpdateAction"/> for the x-state.
            File in archive is newer than the file on disk.
            </summary>
            <value>
            The <see cref="T:Cake.SevenZip.Switches.UpdateAction"/>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.Y">
            <summary>
            Sets the <see cref="T:Cake.SevenZip.Switches.UpdateAction"/> for the y-state.
            File in archive is older than the file on disk.
            </summary>
            <value>
            The <see cref="T:Cake.SevenZip.Switches.UpdateAction"/>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.Z">
            <summary>
            Sets the <see cref="T:Cake.SevenZip.Switches.UpdateAction"/> for the z-state.
            File in archive is same as the file on disk.
            </summary>
            <value>
            The <see cref="T:Cake.SevenZip.Switches.UpdateAction"/>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.W">
            <summary>
            Sets the <see cref="T:Cake.SevenZip.Switches.UpdateAction"/> for the w-state.
            Can not be detected what file is newer (times are the same, sizes are different).
            </summary>
            <value>
            The <see cref="T:Cake.SevenZip.Switches.UpdateAction"/>.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchUpdateOptions.NewArchiveName">
            <summary>
            Sets the new archive-name.
            </summary>
            <value>
            The new name of the archive.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchUpdateOptions.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc />
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchVolume">
            <summary>
            <para>
            -v (Create Volumes) switch.
            </para>
            <para>
            Specifies volume sizes.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchVolume"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchVolumeBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchVolumeCollection"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchVolume.Size">
            <summary>
            Sets the size.
            </summary>
            <value>
            The size. Must be greater than 0.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.SwitchVolume.Unit">
            <summary>
            Sets the unit.
            </summary>
            <value>
            The unit. Default is bytes.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchVolume.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchVolumeCollection">
            <summary>
            A Collection of <see cref="T:Cake.SevenZip.Switches.SwitchVolume"/>.
            </summary>
            <seealso cref="T:Cake.SevenZip.Switches.BaseSwitchCollection`1" />
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchVolumeCollection.#ctor(Cake.SevenZip.Switches.SwitchVolume,Cake.SevenZip.Switches.SwitchVolume[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchVolumeCollection"/> class.
            </summary>
            <param name="initial">The initial.</param>
            <param name="additional">The additional.</param>
        </member>
        <member name="T:Cake.SevenZip.Switches.SwitchWorkingDirectory">
            <summary>
            <para>
            -w (set Working directory) switch.
            </para>
            <para>
            Sets the working directory for the temporary base archive.
            By default, 7-Zip builds a new base archive file in the same
            directory as the old base archive file. By specifying this switch,
            you can set the working directory where the temporary base archive file will be built.
            After the temporary base archive file is built, it is copied over the original archive;
            then, the temporary file is deleted.
            </para>
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.ISupportSwitchWorkingDirectory"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.SwitchWorkingDirectoryBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Switches.ISwitch" />
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchWorkingDirectory.#ctor(Cake.Core.IO.DirectoryPath)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.Switches.SwitchWorkingDirectory"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Cake.SevenZip.Switches.SwitchWorkingDirectory.BuildArguments(Cake.Core.IO.ProcessArgumentBuilder@)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.UpdateAction">
            <summary>
            Specifies the action for a given <see cref="T:Cake.SevenZip.Switches.SwitchUpdateOptions"/>-State.
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchUpdateOptions"/></description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.UpdateAction.Ignore">
            <summary>
            Gets the ignore-action.
            Ignore file (don't create item in new archive for this file).
            </summary>
            <value>
            The ignore-action.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.UpdateAction.Copy">
            <summary>
            Gets the copy-action.
            Copy file (copy from old archive to new).
            </summary>
            <value>
            The copy-action.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.UpdateAction.Compress">
            <summary>
            Gets the compress-action.
            Compress (compress file from disk to new archive).
            </summary>
            <value>
            The compress-action.
            </value>
        </member>
        <member name="P:Cake.SevenZip.Switches.UpdateAction.Anti">
            <summary>
            Gets the anti-action.
            Create Anti-item (item that will delete file or directory during extracting). This feature is supported only in 7z format.
            </summary>
            <value>
            The anti-action.
            </value>
        </member>
        <member name="M:Cake.SevenZip.Switches.UpdateAction.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.Switches.VolumeUnit">
            <summary>
            Units for <see cref="T:Cake.SevenZip.Switches.SwitchCompressionMethod"/>.
            <para>
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Switches.SwitchUpdateOptions"/></description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.VolumeUnit.Bytes">
            <summary>
            Gets Unit: Bytes (b).
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.VolumeUnit.Kilobytes">
            <summary>
            Gets Unit: Kilobytes (k).
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.VolumeUnit.Megabytes">
            <summary>
            Gets Unit: Megabytes (m).
            </summary>
        </member>
        <member name="P:Cake.SevenZip.Switches.VolumeUnit.Gigabytes">
            <summary>
            Gets Unit: Gigabytes (g).
            </summary>
        </member>
        <member name="M:Cake.SevenZip.Switches.VolumeUnit.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Cake.SevenZip.SevenZipAliases">
            <summary>
            <para>Functions to call <see href="https://7-zip.org/">7-Zip</see>.</para>
            <para>
            In order to use this add-in, 7z.exe or 7za.exe has to be available.
            One option is using
            <see href="https://www.nuget.org/packages/7-Zip.CommandLine/">7-Zip.CommandLine from nuget</see>.
            The other option is to have 7z installed on your system (I.e. There is a registry-key HKLM/Software/7-Zip/Path
            that points to a directory containing 7z.exe or 7za.exe).
            </para>
            <para>
            Supported formats and capabilities depend on your 7z-version.
            </para>
            <para>
            To install add the following lines to your cake-file:
            <code>
            <![CDATA[
            #tool "nuget:?package=7-Zip.CommandLine"
            #addin "nuget:?package=Cake.7zip"
            ]]>
            </code>
            </para>
            </summary>
        </member>
        <member name="M:Cake.SevenZip.SevenZipAliases.SevenZip(Cake.Core.ICakeContext,System.Action{Cake.SevenZip.Builder.CommandBuilder})">
            <summary>
            Runs 7zip, using a fluent builder for configuration.
            <para>
            For more examples see the different builders for the <see cref="T:Cake.SevenZip.Commands.ICommand"/>.
            <list type="bullet">
            <item><description><see cref="T:Cake.SevenZip.Builder.AddCommandBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.DeleteCommandBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.ExtractCommandBuilder"/></description></item>
            <item><description><see cref="T:Cake.SevenZip.Builder.UpdateCommandBuilder"/></description></item>
            </list>
            </para>
            <seealso cref="T:Cake.SevenZip.Commands.ICommand"/>
            <seealso cref="T:Cake.SevenZip.Builder.CommandBuilder"/>
            </summary>
            <param name="context">The <see cref="T:Cake.Core.ICakeContext"/>.</param>
            <param name="action">The fluent <see cref="T:Cake.SevenZip.Builder.CommandBuilder"/>.</param>
            <example>
            <code>
            <![CDATA[
            Task("ZipIt")
                .Does(() =>
            {
                SevenZip(m => m
                    .InAddMode()
                    .WithArchive(File("path/to/file.zip"))
                    .WithFiles(File("a.txt"))
                    .WithFiles(File("b.txt"))
                    .WithVolume(1, VolumeUnit.Gigabytes));
            });
            ]]>
            </code>
            <code>
            <![CDATA[
            Task("UnzipIt")
                .Does(() =>
            {
                SevenZip(m => m
                  .InExtractMode()
                  .WithArchive(File("path/to/file.zip"))
                  .WithArchiveType(SwitchArchiveType.Zip)
                  .WithOutputDirectory("some/other/directory"));
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.SevenZip.SevenZipAliases.SevenZip(Cake.Core.ICakeContext,Cake.SevenZip.SevenZipSettings,System.Action{Cake.SevenZip.Builder.CommandBuilder})">
            <summary>
            <para>
            Runs 7zip, using <see cref="T:Cake.SevenZip.SevenZipSettings"/> for configuration and additionally
            <see cref="T:Cake.SevenZip.Builder.CommandBuilder"/> for fluent configuration of the Command.
            </para>
            <para>
            Works exactly like <see cref="M:Cake.SevenZip.SevenZipAliases.SevenZip(Cake.Core.ICakeContext,System.Action{Cake.SevenZip.Builder.CommandBuilder})"/>
            However, the settings are supplied to set e.g. the <c>ToolPath</c> or something else.
            </para>
            <para>
            <strong>DO NOT</strong> set <c>Command</c> on the <see cref="T:Cake.SevenZip.SevenZipSettings"/>,
            as it will be overwritten by the <see cref="T:Cake.SevenZip.Builder.CommandBuilder"/>.
            </para>
            </summary>
            <param name="context">The <see cref="T:Cake.Core.ICakeContext"/>.</param>
            <param name="settings">The <see cref="T:Cake.SevenZip.SevenZipSettings"/>.</param>
            <param name="action">The fluent <see cref="T:Cake.SevenZip.Builder.CommandBuilder"/>-Builder.</param>
        </member>
        <member name="M:Cake.SevenZip.SevenZipAliases.SevenZip(Cake.Core.ICakeContext,Cake.SevenZip.SevenZipSettings)">
            <summary>
            Runs 7zip, using <see cref="T:Cake.SevenZip.SevenZipSettings"/> for configuration.
            </summary>
            <param name="context">The <see cref="T:Cake.Core.ICakeContext"/>.</param>
            <param name="settings">The <see cref="T:Cake.SevenZip.SevenZipSettings"/>.</param>
            <example>
            <code>
            <![CDATA[
            Task("ZipIt")
                .Does(() =>
            {
                SevenZip(new SevenZipSettings
                {
                    Command = new AddCommand
                    {
                        Files = new FilePathCollection(new[] { new FilePath("a.txt"), new FilePath("b.txt") }),
                        Archive = new FilePath("out.zip"),
                        Volumes = new SwitchVolumeCollection(
                            new SwitchVolume
                            {
                                Size = 1,
                                Unit = VolumeUnit.Gigabytes
                            })
                    }
                });
            });
            ]]>
            </code>
            </example>
        </member>
        <member name="T:Cake.SevenZip.SevenZipRunner">
            <summary>
            The Tool-Runner for 7zip.
            </summary>
            <seealso cref="T:Cake.Core.Tooling.Tool`1" />
        </member>
        <member name="M:Cake.SevenZip.SevenZipRunner.#ctor(Cake.Core.IO.IFileSystem,Cake.Core.ICakeEnvironment,Cake.Core.IO.IProcessRunner,Cake.Core.Tooling.IToolLocator,Cake.Core.Diagnostics.ICakeLog,Cake.Core.IO.IRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.SevenZip.SevenZipRunner"/> class.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="environment">The environment.</param>
            <param name="processRunner">The process runner.</param>
            <param name="tools">The tool locator.</param>
            <param name="log">The log.</param>
            <param name="registry">The Registry.</param>
        </member>
        <member name="M:Cake.SevenZip.SevenZipRunner.Run(Cake.SevenZip.SevenZipSettings)">
            <summary>
            Runs the specified settings.
            </summary>
            <param name="settings">The settings.</param>
            <exception cref="T:System.ArgumentNullException">settings.</exception>
        </member>
        <member name="M:Cake.SevenZip.SevenZipRunner.GetToolExecutableNames">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.SevenZipRunner.GetToolName">
            <inheritdoc/>
        </member>
        <member name="M:Cake.SevenZip.SevenZipRunner.GetAlternativeToolPaths(Cake.SevenZip.SevenZipSettings)">
            <inheritdoc/>
        </member>
        <member name="T:Cake.SevenZip.SevenZipSettings">
            <summary>
            Settings for running 7zip.
            </summary>
            <seealso cref="T:Cake.Core.Tooling.ToolSettings" />
        </member>
        <member name="P:Cake.SevenZip.SevenZipSettings.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
    </members>
</doc>
